
avr.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  0000041e  00000492  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000041e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004a6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004d8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000518  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000076b  00000000  00000000  00000548  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006b2  00000000  00000000  00000cb3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002db  00000000  00000000  00001365  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  00001640  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000363  00000000  00000000  00001694  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000ca  00000000  00000000  000019f7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001ac1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e1       	ldi	r30, 0x1E	; 30
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 31       	cpi	r26, 0x14	; 20
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 67 00 	call	0xce	; 0xce <main>
  8e:	0c 94 0d 02 	jmp	0x41a	; 0x41a <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <init>:
		
    }
}
void init(){
	
	UCSR0B=(1<<TXEN0)|(1<<RXEN0);
  96:	88 e1       	ldi	r24, 0x18	; 24
  98:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C=(1<<UCSZ01)|(1<<UCSZ00);
  9c:	86 e0       	ldi	r24, 0x06	; 6
  9e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	UBRR0L = X;
  a2:	87 e6       	ldi	r24, 0x67	; 103
  a4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	
	TCCR0A = (1<<WGM00) | (1<<WGM01) | (0<<COM0A0) | (0<<COM0B0) | (1<<COM0B1);
  a8:	83 e2       	ldi	r24, 0x23	; 35
  aa:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1<<WGM02) | (0<<CS00) | (0<<CS01) | (1<<CS02);   //pre-scalar 256
  ac:	8c e0       	ldi	r24, 0x0C	; 12
  ae:	85 bd       	out	0x25, r24	; 37
	
	OCR0A = 125;  // frePWM=16000000/125*256=500
  b0:	8d e7       	ldi	r24, 0x7D	; 125
  b2:	87 bd       	out	0x27, r24	; 39
	OCR0B = 62;
  b4:	8e e3       	ldi	r24, 0x3E	; 62
  b6:	88 bd       	out	0x28, r24	; 40
	DDRD=0xff;
  b8:	8f ef       	ldi	r24, 0xFF	; 255
  ba:	8a b9       	out	0x0a, r24	; 10
  bc:	08 95       	ret

000000be <send>:
}



void send(char data) {
	while( !( UCSR0A & (1<<UDRE0)) );
  be:	e0 ec       	ldi	r30, 0xC0	; 192
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	90 81       	ld	r25, Z
  c4:	95 ff       	sbrs	r25, 5
  c6:	fd cf       	rjmp	.-6      	; 0xc2 <send+0x4>
	UDR0 = data;
  c8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  cc:	08 95       	ret

000000ce <main>:
void send(char data);
int receive(void);


int main(void)
{
  ce:	cf 93       	push	r28
  d0:	df 93       	push	r29
  d2:	cd b7       	in	r28, 0x3d	; 61
  d4:	de b7       	in	r29, 0x3e	; 62
  d6:	63 97       	sbiw	r28, 0x13	; 19
  d8:	0f b6       	in	r0, 0x3f	; 63
  da:	f8 94       	cli
  dc:	de bf       	out	0x3e, r29	; 62
  de:	0f be       	out	0x3f, r0	; 63
  e0:	cd bf       	out	0x3d, r28	; 61
	
	unsigned char b[] = " The pulse width: ";
  e2:	83 e1       	ldi	r24, 0x13	; 19
  e4:	e0 e0       	ldi	r30, 0x00	; 0
  e6:	f1 e0       	ldi	r31, 0x01	; 1
  e8:	de 01       	movw	r26, r28
  ea:	11 96       	adiw	r26, 0x01	; 1
  ec:	01 90       	ld	r0, Z+
  ee:	0d 92       	st	X+, r0
  f0:	8a 95       	dec	r24
  f2:	e1 f7       	brne	.-8      	; 0xec <main+0x1e>
	unsigned char t1;
	char newline='\n';
	init();
  f4:	0e 94 4b 00 	call	0x96	; 0x96 <init>
	while (1) 
    {
		DDRB &= ~(1<<0); 
		PORTB=1;
  f8:	22 24       	eor	r2, r2
  fa:	23 94       	inc	r2
		TCCR1A=0; 
  fc:	68 94       	set
  fe:	66 24       	eor	r6, r6
 100:	67 f8       	bld	r6, 7
 102:	71 2c       	mov	r7, r1
		TCCR1B=(1<<ICES1)|(1<<CS12)| (0<<CS11) | (0<<CS10); //Rising edge, prescaler=256, no noise canceller
 104:	0f 2e       	mov	r0, r31
 106:	f1 e8       	ldi	r31, 0x81	; 129
 108:	8f 2e       	mov	r8, r31
 10a:	91 2c       	mov	r9, r1
 10c:	f0 2d       	mov	r31, r0
 10e:	0f 2e       	mov	r0, r31
 110:	f4 e4       	ldi	r31, 0x44	; 68
 112:	3f 2e       	mov	r3, r31
 114:	f0 2d       	mov	r31, r0
		TIFR1=(1<<ICF1);//Clear input capture flag 
 116:	68 94       	set
 118:	cc 24       	eor	r12, r12
 11a:	c5 f8       	bld	r12, 5
		while((TIFR1&(1<<ICF1))==0); //wait until ICF1 is set 
		t1=ICR1L;
 11c:	0f 2e       	mov	r0, r31
 11e:	f6 e8       	ldi	r31, 0x86	; 134
 120:	af 2e       	mov	r10, r31
 122:	b1 2c       	mov	r11, r1
 124:	f0 2d       	mov	r31, r0
		
		TIFR1=(1<<ICF1);//Clear
		TCCR1B=(0<<ICES1) | (1<<CS12) | (0<<CS11) | (0<<CS10) ;//Falling edge, prescaler 256, no noise canceller
 126:	68 94       	set
 128:	44 24       	eor	r4, r4
 12a:	42 f8       	bld	r4, 2
 12c:	7e 01       	movw	r14, r28
 12e:	82 e1       	ldi	r24, 0x12	; 18
 130:	e8 0e       	add	r14, r24
 132:	f1 1c       	adc	r15, r1

		for(int i=0; i<17;i++){
			send(b[i]);
		}
			
		send(t1 / 10 + '0');
 134:	0f 2e       	mov	r0, r31
 136:	fd ec       	ldi	r31, 0xCD	; 205
 138:	5f 2e       	mov	r5, r31
 13a:	f0 2d       	mov	r31, r0
	unsigned char t1;
	char newline='\n';
	init();
	while (1) 
    {
		DDRB &= ~(1<<0); 
 13c:	20 98       	cbi	0x04, 0	; 4
		PORTB=1;
 13e:	25 b8       	out	0x05, r2	; 5
		TCCR1A=0; 
 140:	f3 01       	movw	r30, r6
 142:	10 82       	st	Z, r1
		TCCR1B=(1<<ICES1)|(1<<CS12)| (0<<CS11) | (0<<CS10); //Rising edge, prescaler=256, no noise canceller
 144:	f4 01       	movw	r30, r8
 146:	30 82       	st	Z, r3
		TIFR1=(1<<ICF1);//Clear input capture flag 
 148:	c6 ba       	out	0x16, r12	; 22
		while((TIFR1&(1<<ICF1))==0); //wait until ICF1 is set 
 14a:	b5 9b       	sbis	0x16, 5	; 22
 14c:	fe cf       	rjmp	.-4      	; 0x14a <main+0x7c>
		t1=ICR1L;
 14e:	f5 01       	movw	r30, r10
 150:	80 81       	ld	r24, Z
		
		TIFR1=(1<<ICF1);//Clear
 152:	c6 ba       	out	0x16, r12	; 22
		TCCR1B=(0<<ICES1) | (1<<CS12) | (0<<CS11) | (0<<CS10) ;//Falling edge, prescaler 256, no noise canceller
 154:	f4 01       	movw	r30, r8
 156:	40 82       	st	Z, r4
		while((TIFR1&(1<<ICF1))==0); //Wait
 158:	b5 9b       	sbis	0x16, 5	; 22
 15a:	fe cf       	rjmp	.-4      	; 0x158 <main+0x8a>
		t1=ICR1L-t1; 
 15c:	f5 01       	movw	r30, r10
 15e:	60 81       	ld	r22, Z
		TIFR1=(1<<ICF1); //Clear 
 160:	c6 ba       	out	0x16, r12	; 22
		t1 *= 0.79;
 162:	68 1b       	sub	r22, r24
 164:	70 e0       	ldi	r23, 0x00	; 0
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	0e 94 14 01 	call	0x228	; 0x228 <__floatsisf>
 16e:	21 e7       	ldi	r18, 0x71	; 113
 170:	3d e3       	ldi	r19, 0x3D	; 61
 172:	4a e4       	ldi	r20, 0x4A	; 74
 174:	5f e3       	ldi	r21, 0x3F	; 63
 176:	0e 94 78 01 	call	0x2f0	; 0x2f0 <__mulsf3>
 17a:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <__fixunssfsi>
 17e:	d6 2e       	mov	r13, r22
 180:	8e 01       	movw	r16, r28
 182:	0f 5f       	subi	r16, 0xFF	; 255
 184:	1f 4f       	sbci	r17, 0xFF	; 255

		for(int i=0; i<17;i++){
			send(b[i]);
 186:	f8 01       	movw	r30, r16
 188:	81 91       	ld	r24, Z+
 18a:	8f 01       	movw	r16, r30
 18c:	0e 94 5f 00 	call	0xbe	; 0xbe <send>
		while((TIFR1&(1<<ICF1))==0); //Wait
		t1=ICR1L-t1; 
		TIFR1=(1<<ICF1); //Clear 
		t1 *= 0.79;

		for(int i=0; i<17;i++){
 190:	0e 15       	cp	r16, r14
 192:	1f 05       	cpc	r17, r15
 194:	c1 f7       	brne	.-16     	; 0x186 <main+0xb8>
			send(b[i]);
		}
			
		send(t1 / 10 + '0');
 196:	d5 9c       	mul	r13, r5
 198:	11 2d       	mov	r17, r1
 19a:	11 24       	eor	r1, r1
 19c:	16 95       	lsr	r17
 19e:	16 95       	lsr	r17
 1a0:	16 95       	lsr	r17
 1a2:	80 e3       	ldi	r24, 0x30	; 48
 1a4:	81 0f       	add	r24, r17
 1a6:	0e 94 5f 00 	call	0xbe	; 0xbe <send>
		send(t1 % 10 +'0');
 1aa:	11 0f       	add	r17, r17
 1ac:	81 2f       	mov	r24, r17
 1ae:	88 0f       	add	r24, r24
 1b0:	88 0f       	add	r24, r24
 1b2:	18 0f       	add	r17, r24
 1b4:	8d 2d       	mov	r24, r13
 1b6:	81 1b       	sub	r24, r17
 1b8:	80 5d       	subi	r24, 0xD0	; 208
 1ba:	0e 94 5f 00 	call	0xbe	; 0xbe <send>
		send(newline);
 1be:	8a e0       	ldi	r24, 0x0A	; 10
 1c0:	0e 94 5f 00 	call	0xbe	; 0xbe <send>

		
		
    }
 1c4:	bb cf       	rjmp	.-138    	; 0x13c <main+0x6e>

000001c6 <__fixunssfsi>:
 1c6:	0e 94 57 01 	call	0x2ae	; 0x2ae <__fp_splitA>
 1ca:	88 f0       	brcs	.+34     	; 0x1ee <__fixunssfsi+0x28>
 1cc:	9f 57       	subi	r25, 0x7F	; 127
 1ce:	98 f0       	brcs	.+38     	; 0x1f6 <__fixunssfsi+0x30>
 1d0:	b9 2f       	mov	r27, r25
 1d2:	99 27       	eor	r25, r25
 1d4:	b7 51       	subi	r27, 0x17	; 23
 1d6:	b0 f0       	brcs	.+44     	; 0x204 <__fixunssfsi+0x3e>
 1d8:	e1 f0       	breq	.+56     	; 0x212 <__fixunssfsi+0x4c>
 1da:	66 0f       	add	r22, r22
 1dc:	77 1f       	adc	r23, r23
 1de:	88 1f       	adc	r24, r24
 1e0:	99 1f       	adc	r25, r25
 1e2:	1a f0       	brmi	.+6      	; 0x1ea <__fixunssfsi+0x24>
 1e4:	ba 95       	dec	r27
 1e6:	c9 f7       	brne	.-14     	; 0x1da <__fixunssfsi+0x14>
 1e8:	14 c0       	rjmp	.+40     	; 0x212 <__fixunssfsi+0x4c>
 1ea:	b1 30       	cpi	r27, 0x01	; 1
 1ec:	91 f0       	breq	.+36     	; 0x212 <__fixunssfsi+0x4c>
 1ee:	0e 94 71 01 	call	0x2e2	; 0x2e2 <__fp_zero>
 1f2:	b1 e0       	ldi	r27, 0x01	; 1
 1f4:	08 95       	ret
 1f6:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__fp_zero>
 1fa:	67 2f       	mov	r22, r23
 1fc:	78 2f       	mov	r23, r24
 1fe:	88 27       	eor	r24, r24
 200:	b8 5f       	subi	r27, 0xF8	; 248
 202:	39 f0       	breq	.+14     	; 0x212 <__fixunssfsi+0x4c>
 204:	b9 3f       	cpi	r27, 0xF9	; 249
 206:	cc f3       	brlt	.-14     	; 0x1fa <__fixunssfsi+0x34>
 208:	86 95       	lsr	r24
 20a:	77 95       	ror	r23
 20c:	67 95       	ror	r22
 20e:	b3 95       	inc	r27
 210:	d9 f7       	brne	.-10     	; 0x208 <__fixunssfsi+0x42>
 212:	3e f4       	brtc	.+14     	; 0x222 <__fixunssfsi+0x5c>
 214:	90 95       	com	r25
 216:	80 95       	com	r24
 218:	70 95       	com	r23
 21a:	61 95       	neg	r22
 21c:	7f 4f       	sbci	r23, 0xFF	; 255
 21e:	8f 4f       	sbci	r24, 0xFF	; 255
 220:	9f 4f       	sbci	r25, 0xFF	; 255
 222:	08 95       	ret

00000224 <__floatunsisf>:
 224:	e8 94       	clt
 226:	09 c0       	rjmp	.+18     	; 0x23a <__floatsisf+0x12>

00000228 <__floatsisf>:
 228:	97 fb       	bst	r25, 7
 22a:	3e f4       	brtc	.+14     	; 0x23a <__floatsisf+0x12>
 22c:	90 95       	com	r25
 22e:	80 95       	com	r24
 230:	70 95       	com	r23
 232:	61 95       	neg	r22
 234:	7f 4f       	sbci	r23, 0xFF	; 255
 236:	8f 4f       	sbci	r24, 0xFF	; 255
 238:	9f 4f       	sbci	r25, 0xFF	; 255
 23a:	99 23       	and	r25, r25
 23c:	a9 f0       	breq	.+42     	; 0x268 <__floatsisf+0x40>
 23e:	f9 2f       	mov	r31, r25
 240:	96 e9       	ldi	r25, 0x96	; 150
 242:	bb 27       	eor	r27, r27
 244:	93 95       	inc	r25
 246:	f6 95       	lsr	r31
 248:	87 95       	ror	r24
 24a:	77 95       	ror	r23
 24c:	67 95       	ror	r22
 24e:	b7 95       	ror	r27
 250:	f1 11       	cpse	r31, r1
 252:	f8 cf       	rjmp	.-16     	; 0x244 <__floatsisf+0x1c>
 254:	fa f4       	brpl	.+62     	; 0x294 <__floatsisf+0x6c>
 256:	bb 0f       	add	r27, r27
 258:	11 f4       	brne	.+4      	; 0x25e <__floatsisf+0x36>
 25a:	60 ff       	sbrs	r22, 0
 25c:	1b c0       	rjmp	.+54     	; 0x294 <__floatsisf+0x6c>
 25e:	6f 5f       	subi	r22, 0xFF	; 255
 260:	7f 4f       	sbci	r23, 0xFF	; 255
 262:	8f 4f       	sbci	r24, 0xFF	; 255
 264:	9f 4f       	sbci	r25, 0xFF	; 255
 266:	16 c0       	rjmp	.+44     	; 0x294 <__floatsisf+0x6c>
 268:	88 23       	and	r24, r24
 26a:	11 f0       	breq	.+4      	; 0x270 <__floatsisf+0x48>
 26c:	96 e9       	ldi	r25, 0x96	; 150
 26e:	11 c0       	rjmp	.+34     	; 0x292 <__floatsisf+0x6a>
 270:	77 23       	and	r23, r23
 272:	21 f0       	breq	.+8      	; 0x27c <__floatsisf+0x54>
 274:	9e e8       	ldi	r25, 0x8E	; 142
 276:	87 2f       	mov	r24, r23
 278:	76 2f       	mov	r23, r22
 27a:	05 c0       	rjmp	.+10     	; 0x286 <__floatsisf+0x5e>
 27c:	66 23       	and	r22, r22
 27e:	71 f0       	breq	.+28     	; 0x29c <__floatsisf+0x74>
 280:	96 e8       	ldi	r25, 0x86	; 134
 282:	86 2f       	mov	r24, r22
 284:	70 e0       	ldi	r23, 0x00	; 0
 286:	60 e0       	ldi	r22, 0x00	; 0
 288:	2a f0       	brmi	.+10     	; 0x294 <__floatsisf+0x6c>
 28a:	9a 95       	dec	r25
 28c:	66 0f       	add	r22, r22
 28e:	77 1f       	adc	r23, r23
 290:	88 1f       	adc	r24, r24
 292:	da f7       	brpl	.-10     	; 0x28a <__floatsisf+0x62>
 294:	88 0f       	add	r24, r24
 296:	96 95       	lsr	r25
 298:	87 95       	ror	r24
 29a:	97 f9       	bld	r25, 7
 29c:	08 95       	ret

0000029e <__fp_split3>:
 29e:	57 fd       	sbrc	r21, 7
 2a0:	90 58       	subi	r25, 0x80	; 128
 2a2:	44 0f       	add	r20, r20
 2a4:	55 1f       	adc	r21, r21
 2a6:	59 f0       	breq	.+22     	; 0x2be <__fp_splitA+0x10>
 2a8:	5f 3f       	cpi	r21, 0xFF	; 255
 2aa:	71 f0       	breq	.+28     	; 0x2c8 <__fp_splitA+0x1a>
 2ac:	47 95       	ror	r20

000002ae <__fp_splitA>:
 2ae:	88 0f       	add	r24, r24
 2b0:	97 fb       	bst	r25, 7
 2b2:	99 1f       	adc	r25, r25
 2b4:	61 f0       	breq	.+24     	; 0x2ce <__fp_splitA+0x20>
 2b6:	9f 3f       	cpi	r25, 0xFF	; 255
 2b8:	79 f0       	breq	.+30     	; 0x2d8 <__fp_splitA+0x2a>
 2ba:	87 95       	ror	r24
 2bc:	08 95       	ret
 2be:	12 16       	cp	r1, r18
 2c0:	13 06       	cpc	r1, r19
 2c2:	14 06       	cpc	r1, r20
 2c4:	55 1f       	adc	r21, r21
 2c6:	f2 cf       	rjmp	.-28     	; 0x2ac <__fp_split3+0xe>
 2c8:	46 95       	lsr	r20
 2ca:	f1 df       	rcall	.-30     	; 0x2ae <__fp_splitA>
 2cc:	08 c0       	rjmp	.+16     	; 0x2de <__fp_splitA+0x30>
 2ce:	16 16       	cp	r1, r22
 2d0:	17 06       	cpc	r1, r23
 2d2:	18 06       	cpc	r1, r24
 2d4:	99 1f       	adc	r25, r25
 2d6:	f1 cf       	rjmp	.-30     	; 0x2ba <__fp_splitA+0xc>
 2d8:	86 95       	lsr	r24
 2da:	71 05       	cpc	r23, r1
 2dc:	61 05       	cpc	r22, r1
 2de:	08 94       	sec
 2e0:	08 95       	ret

000002e2 <__fp_zero>:
 2e2:	e8 94       	clt

000002e4 <__fp_szero>:
 2e4:	bb 27       	eor	r27, r27
 2e6:	66 27       	eor	r22, r22
 2e8:	77 27       	eor	r23, r23
 2ea:	cb 01       	movw	r24, r22
 2ec:	97 f9       	bld	r25, 7
 2ee:	08 95       	ret

000002f0 <__mulsf3>:
 2f0:	0e 94 8b 01 	call	0x316	; 0x316 <__mulsf3x>
 2f4:	0c 94 fc 01 	jmp	0x3f8	; 0x3f8 <__fp_round>
 2f8:	0e 94 ee 01 	call	0x3dc	; 0x3dc <__fp_pscA>
 2fc:	38 f0       	brcs	.+14     	; 0x30c <__mulsf3+0x1c>
 2fe:	0e 94 f5 01 	call	0x3ea	; 0x3ea <__fp_pscB>
 302:	20 f0       	brcs	.+8      	; 0x30c <__mulsf3+0x1c>
 304:	95 23       	and	r25, r21
 306:	11 f0       	breq	.+4      	; 0x30c <__mulsf3+0x1c>
 308:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <__fp_inf>
 30c:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__fp_nan>
 310:	11 24       	eor	r1, r1
 312:	0c 94 72 01 	jmp	0x2e4	; 0x2e4 <__fp_szero>

00000316 <__mulsf3x>:
 316:	0e 94 4f 01 	call	0x29e	; 0x29e <__fp_split3>
 31a:	70 f3       	brcs	.-36     	; 0x2f8 <__mulsf3+0x8>

0000031c <__mulsf3_pse>:
 31c:	95 9f       	mul	r25, r21
 31e:	c1 f3       	breq	.-16     	; 0x310 <__mulsf3+0x20>
 320:	95 0f       	add	r25, r21
 322:	50 e0       	ldi	r21, 0x00	; 0
 324:	55 1f       	adc	r21, r21
 326:	62 9f       	mul	r22, r18
 328:	f0 01       	movw	r30, r0
 32a:	72 9f       	mul	r23, r18
 32c:	bb 27       	eor	r27, r27
 32e:	f0 0d       	add	r31, r0
 330:	b1 1d       	adc	r27, r1
 332:	63 9f       	mul	r22, r19
 334:	aa 27       	eor	r26, r26
 336:	f0 0d       	add	r31, r0
 338:	b1 1d       	adc	r27, r1
 33a:	aa 1f       	adc	r26, r26
 33c:	64 9f       	mul	r22, r20
 33e:	66 27       	eor	r22, r22
 340:	b0 0d       	add	r27, r0
 342:	a1 1d       	adc	r26, r1
 344:	66 1f       	adc	r22, r22
 346:	82 9f       	mul	r24, r18
 348:	22 27       	eor	r18, r18
 34a:	b0 0d       	add	r27, r0
 34c:	a1 1d       	adc	r26, r1
 34e:	62 1f       	adc	r22, r18
 350:	73 9f       	mul	r23, r19
 352:	b0 0d       	add	r27, r0
 354:	a1 1d       	adc	r26, r1
 356:	62 1f       	adc	r22, r18
 358:	83 9f       	mul	r24, r19
 35a:	a0 0d       	add	r26, r0
 35c:	61 1d       	adc	r22, r1
 35e:	22 1f       	adc	r18, r18
 360:	74 9f       	mul	r23, r20
 362:	33 27       	eor	r19, r19
 364:	a0 0d       	add	r26, r0
 366:	61 1d       	adc	r22, r1
 368:	23 1f       	adc	r18, r19
 36a:	84 9f       	mul	r24, r20
 36c:	60 0d       	add	r22, r0
 36e:	21 1d       	adc	r18, r1
 370:	82 2f       	mov	r24, r18
 372:	76 2f       	mov	r23, r22
 374:	6a 2f       	mov	r22, r26
 376:	11 24       	eor	r1, r1
 378:	9f 57       	subi	r25, 0x7F	; 127
 37a:	50 40       	sbci	r21, 0x00	; 0
 37c:	9a f0       	brmi	.+38     	; 0x3a4 <__mulsf3_pse+0x88>
 37e:	f1 f0       	breq	.+60     	; 0x3bc <__mulsf3_pse+0xa0>
 380:	88 23       	and	r24, r24
 382:	4a f0       	brmi	.+18     	; 0x396 <__mulsf3_pse+0x7a>
 384:	ee 0f       	add	r30, r30
 386:	ff 1f       	adc	r31, r31
 388:	bb 1f       	adc	r27, r27
 38a:	66 1f       	adc	r22, r22
 38c:	77 1f       	adc	r23, r23
 38e:	88 1f       	adc	r24, r24
 390:	91 50       	subi	r25, 0x01	; 1
 392:	50 40       	sbci	r21, 0x00	; 0
 394:	a9 f7       	brne	.-22     	; 0x380 <__mulsf3_pse+0x64>
 396:	9e 3f       	cpi	r25, 0xFE	; 254
 398:	51 05       	cpc	r21, r1
 39a:	80 f0       	brcs	.+32     	; 0x3bc <__mulsf3_pse+0xa0>
 39c:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <__fp_inf>
 3a0:	0c 94 72 01 	jmp	0x2e4	; 0x2e4 <__fp_szero>
 3a4:	5f 3f       	cpi	r21, 0xFF	; 255
 3a6:	e4 f3       	brlt	.-8      	; 0x3a0 <__mulsf3_pse+0x84>
 3a8:	98 3e       	cpi	r25, 0xE8	; 232
 3aa:	d4 f3       	brlt	.-12     	; 0x3a0 <__mulsf3_pse+0x84>
 3ac:	86 95       	lsr	r24
 3ae:	77 95       	ror	r23
 3b0:	67 95       	ror	r22
 3b2:	b7 95       	ror	r27
 3b4:	f7 95       	ror	r31
 3b6:	e7 95       	ror	r30
 3b8:	9f 5f       	subi	r25, 0xFF	; 255
 3ba:	c1 f7       	brne	.-16     	; 0x3ac <__mulsf3_pse+0x90>
 3bc:	fe 2b       	or	r31, r30
 3be:	88 0f       	add	r24, r24
 3c0:	91 1d       	adc	r25, r1
 3c2:	96 95       	lsr	r25
 3c4:	87 95       	ror	r24
 3c6:	97 f9       	bld	r25, 7
 3c8:	08 95       	ret

000003ca <__fp_inf>:
 3ca:	97 f9       	bld	r25, 7
 3cc:	9f 67       	ori	r25, 0x7F	; 127
 3ce:	80 e8       	ldi	r24, 0x80	; 128
 3d0:	70 e0       	ldi	r23, 0x00	; 0
 3d2:	60 e0       	ldi	r22, 0x00	; 0
 3d4:	08 95       	ret

000003d6 <__fp_nan>:
 3d6:	9f ef       	ldi	r25, 0xFF	; 255
 3d8:	80 ec       	ldi	r24, 0xC0	; 192
 3da:	08 95       	ret

000003dc <__fp_pscA>:
 3dc:	00 24       	eor	r0, r0
 3de:	0a 94       	dec	r0
 3e0:	16 16       	cp	r1, r22
 3e2:	17 06       	cpc	r1, r23
 3e4:	18 06       	cpc	r1, r24
 3e6:	09 06       	cpc	r0, r25
 3e8:	08 95       	ret

000003ea <__fp_pscB>:
 3ea:	00 24       	eor	r0, r0
 3ec:	0a 94       	dec	r0
 3ee:	12 16       	cp	r1, r18
 3f0:	13 06       	cpc	r1, r19
 3f2:	14 06       	cpc	r1, r20
 3f4:	05 06       	cpc	r0, r21
 3f6:	08 95       	ret

000003f8 <__fp_round>:
 3f8:	09 2e       	mov	r0, r25
 3fa:	03 94       	inc	r0
 3fc:	00 0c       	add	r0, r0
 3fe:	11 f4       	brne	.+4      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 400:	88 23       	and	r24, r24
 402:	52 f0       	brmi	.+20     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 404:	bb 0f       	add	r27, r27
 406:	40 f4       	brcc	.+16     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 408:	bf 2b       	or	r27, r31
 40a:	11 f4       	brne	.+4      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 40c:	60 ff       	sbrs	r22, 0
 40e:	04 c0       	rjmp	.+8      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 410:	6f 5f       	subi	r22, 0xFF	; 255
 412:	7f 4f       	sbci	r23, 0xFF	; 255
 414:	8f 4f       	sbci	r24, 0xFF	; 255
 416:	9f 4f       	sbci	r25, 0xFF	; 255
 418:	08 95       	ret

0000041a <_exit>:
 41a:	f8 94       	cli

0000041c <__stop_program>:
 41c:	ff cf       	rjmp	.-2      	; 0x41c <__stop_program>
