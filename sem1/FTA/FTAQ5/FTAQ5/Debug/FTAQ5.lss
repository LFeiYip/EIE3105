
FTAQ5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800100  00000432  000004c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000432  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800124  00800124  000004ea  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004ea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000051c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  0000055c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000087d  00000000  00000000  000005a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000667  00000000  00000000  00000e21  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003b1  00000000  00000000  00001488  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d0  00000000  00000000  0000183c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003c7  00000000  00000000  0000190c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000129  00000000  00000000  00001cd3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00001dfc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 89 01 	jmp	0x312	; 0x312 <__vector_18>
  4c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__vector_19>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e3       	ldi	r30, 0x32	; 50
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 32       	cpi	r26, 0x24	; 36
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e2       	ldi	r26, 0x24	; 36
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 33       	cpi	r26, 0x36	; 54
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 07 02 	call	0x40e	; 0x40e <main>
  9e:	0c 94 17 02 	jmp	0x42e	; 0x42e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <set_timer1>:
	}
	stop=0;
}
void delay(){
	while(flag==1);
}
  a6:	84 e2       	ldi	r24, 0x24	; 36
  a8:	94 ef       	ldi	r25, 0xF4	; 244
  aa:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  ae:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
  b2:	8c e0       	ldi	r24, 0x0C	; 12
  b4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
  b8:	82 e0       	ldi	r24, 0x02	; 2
  ba:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
  be:	08 95       	ret

000000c0 <__vector_11>:
  c0:	1f 92       	push	r1
  c2:	0f 92       	push	r0
  c4:	0f b6       	in	r0, 0x3f	; 63
  c6:	0f 92       	push	r0
  c8:	11 24       	eor	r1, r1
  ca:	8f 93       	push	r24
  cc:	9f 93       	push	r25
  ce:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  d2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  d6:	00 97       	sbiw	r24, 0x00	; 0
  d8:	31 f0       	breq	.+12     	; 0xe6 <__vector_11+0x26>
  da:	01 97       	sbiw	r24, 0x01	; 1
  dc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  e0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
  e4:	08 c0       	rjmp	.+16     	; 0xf6 <__vector_11+0x36>
  e6:	89 2b       	or	r24, r25
  e8:	31 f4       	brne	.+12     	; 0xf6 <__vector_11+0x36>
  ea:	81 e0       	ldi	r24, 0x01	; 1
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  f2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
  f6:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <__data_end+0x1>
  fa:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <__data_end>
  fe:	9f 91       	pop	r25
 100:	8f 91       	pop	r24
 102:	0f 90       	pop	r0
 104:	0f be       	out	0x3f, r0	; 63
 106:	0f 90       	pop	r0
 108:	1f 90       	pop	r1
 10a:	18 95       	reti

0000010c <__vector_19>:
ISR(USART_UDRE_vect){
 10c:	1f 92       	push	r1
 10e:	0f 92       	push	r0
 110:	0f b6       	in	r0, 0x3f	; 63
 112:	0f 92       	push	r0
 114:	11 24       	eor	r1, r1
 116:	2f 93       	push	r18
 118:	3f 93       	push	r19
 11a:	8f 93       	push	r24
 11c:	9f 93       	push	r25
 11e:	ef 93       	push	r30
 120:	ff 93       	push	r31
		if ((on==1)&(stop==0)){
 122:	91 e0       	ldi	r25, 0x01	; 1
 124:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <on>
 128:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <on+0x1>
 12c:	21 30       	cpi	r18, 0x01	; 1
 12e:	31 05       	cpc	r19, r1
 130:	09 f0       	breq	.+2      	; 0x134 <__vector_19+0x28>
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <__data_end>
 13a:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <__data_end+0x1>
 13e:	23 2b       	or	r18, r19
 140:	09 f0       	breq	.+2      	; 0x144 <__vector_19+0x38>
 142:	80 e0       	ldi	r24, 0x00	; 0
 144:	89 23       	and	r24, r25
 146:	81 f1       	breq	.+96     	; 0x1a8 <__vector_19+0x9c>
			UDR0=prologue[i++];
 148:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <i>
 14c:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <i+0x1>
 150:	9c 01       	movw	r18, r24
 152:	2f 5f       	subi	r18, 0xFF	; 255
 154:	3f 4f       	sbci	r19, 0xFF	; 255
 156:	30 93 35 01 	sts	0x0135, r19	; 0x800135 <i+0x1>
 15a:	20 93 34 01 	sts	0x0134, r18	; 0x800134 <i>
 15e:	fc 01       	movw	r30, r24
 160:	e3 5e       	subi	r30, 0xE3	; 227
 162:	fe 4f       	sbci	r31, 0xFE	; 254
 164:	80 81       	ld	r24, Z
 166:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
			if (i==strlen(prologue))
 16a:	ed e1       	ldi	r30, 0x1D	; 29
 16c:	f1 e0       	ldi	r31, 0x01	; 1
 16e:	01 90       	ld	r0, Z+
 170:	00 20       	and	r0, r0
 172:	e9 f7       	brne	.-6      	; 0x16e <__vector_19+0x62>
 174:	31 97       	sbiw	r30, 0x01	; 1
 176:	ed 51       	subi	r30, 0x1D	; 29
 178:	f1 40       	sbci	r31, 0x01	; 1
 17a:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <i>
 17e:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <i+0x1>
 182:	e8 17       	cp	r30, r24
 184:	f9 07       	cpc	r31, r25
 186:	81 f4       	brne	.+32     	; 0x1a8 <__vector_19+0x9c>
			{
				start=false;
 188:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <start>
				i=0;
 18c:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <i+0x1>
 190:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <i>
				state1s=1;
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <state1s+0x1>
 19c:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <state1s>
				stop=1;
 1a0:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__data_end+0x1>
 1a4:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__data_end>
			}
		}
		if (wrong==1)
 1a8:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <wrong>
 1ac:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <wrong+0x1>
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	81 f5       	brne	.+96     	; 0x214 <__vector_19+0x108>
		{
			UDR0=w[j++];
 1b4:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <j>
 1b8:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <j+0x1>
 1bc:	9c 01       	movw	r18, r24
 1be:	2f 5f       	subi	r18, 0xFF	; 255
 1c0:	3f 4f       	sbci	r19, 0xFF	; 255
 1c2:	30 93 33 01 	sts	0x0133, r19	; 0x800133 <j+0x1>
 1c6:	20 93 32 01 	sts	0x0132, r18	; 0x800132 <j>
 1ca:	fc 01       	movw	r30, r24
 1cc:	ec 5f       	subi	r30, 0xFC	; 252
 1ce:	fe 4f       	sbci	r31, 0xFE	; 254
 1d0:	80 81       	ld	r24, Z
 1d2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
			if (j==strlen(w))
 1d6:	e4 e0       	ldi	r30, 0x04	; 4
 1d8:	f1 e0       	ldi	r31, 0x01	; 1
 1da:	01 90       	ld	r0, Z+
 1dc:	00 20       	and	r0, r0
 1de:	e9 f7       	brne	.-6      	; 0x1da <__vector_19+0xce>
 1e0:	31 97       	sbiw	r30, 0x01	; 1
 1e2:	e4 50       	subi	r30, 0x04	; 4
 1e4:	f1 40       	sbci	r31, 0x01	; 1
 1e6:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <j>
 1ea:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <j+0x1>
 1ee:	e8 17       	cp	r30, r24
 1f0:	f9 07       	cpc	r31, r25
 1f2:	81 f4       	brne	.+32     	; 0x214 <__vector_19+0x108>
			{
				j=0;
 1f4:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <j+0x1>
 1f8:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <j>
				output_enable=0;
 1fc:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <output_enable+0x1>
 200:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <output_enable>
				state=0;
 204:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <state+0x1>
 208:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <state>
				wrong=0;
 20c:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <wrong+0x1>
 210:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <wrong>
			}
		}
		if (output_enable==1)
 214:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <output_enable>
 218:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <output_enable+0x1>
 21c:	01 97       	sbiw	r24, 0x01	; 1
 21e:	09 f0       	breq	.+2      	; 0x222 <__vector_19+0x116>
 220:	6d c0       	rjmp	.+218    	; 0x2fc <__vector_19+0x1f0>
		{
			if (state==1)
 222:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <state>
 226:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <state+0x1>
 22a:	81 30       	cpi	r24, 0x01	; 1
 22c:	91 05       	cpc	r25, r1
 22e:	91 f5       	brne	.+100    	; 0x294 <__vector_19+0x188>
			{
				on=0;
 230:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <on+0x1>
 234:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <on>
				UDR0=rec[j++];
 238:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <j>
 23c:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <j+0x1>
 240:	9c 01       	movw	r18, r24
 242:	2f 5f       	subi	r18, 0xFF	; 255
 244:	3f 4f       	sbci	r19, 0xFF	; 255
 246:	30 93 33 01 	sts	0x0133, r19	; 0x800133 <j+0x1>
 24a:	20 93 32 01 	sts	0x0132, r18	; 0x800132 <j>
 24e:	fc 01       	movw	r30, r24
 250:	ed 5e       	subi	r30, 0xED	; 237
 252:	fe 4f       	sbci	r31, 0xFE	; 254
 254:	80 81       	ld	r24, Z
 256:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
				if (j==strlen(rec))
 25a:	e3 e1       	ldi	r30, 0x13	; 19
 25c:	f1 e0       	ldi	r31, 0x01	; 1
 25e:	01 90       	ld	r0, Z+
 260:	00 20       	and	r0, r0
 262:	e9 f7       	brne	.-6      	; 0x25e <__vector_19+0x152>
 264:	31 97       	sbiw	r30, 0x01	; 1
 266:	e3 51       	subi	r30, 0x13	; 19
 268:	f1 40       	sbci	r31, 0x01	; 1
 26a:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <j>
 26e:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <j+0x1>
 272:	e8 17       	cp	r30, r24
 274:	f9 07       	cpc	r31, r25
 276:	09 f0       	breq	.+2      	; 0x27a <__vector_19+0x16e>
 278:	41 c0       	rjmp	.+130    	; 0x2fc <__vector_19+0x1f0>
				{
					j=0;
 27a:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <j+0x1>
 27e:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <j>
					output_enable=0;
 282:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <output_enable+0x1>
 286:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <output_enable>
					state=0;
 28a:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <state+0x1>
 28e:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <state>
 292:	34 c0       	rjmp	.+104    	; 0x2fc <__vector_19+0x1f0>
				}
			}else if (state==2)
 294:	02 97       	sbiw	r24, 0x02	; 2
 296:	91 f5       	brne	.+100    	; 0x2fc <__vector_19+0x1f0>
			{
				UDR0=res[j++];
 298:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <j>
 29c:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <j+0x1>
 2a0:	9c 01       	movw	r18, r24
 2a2:	2f 5f       	subi	r18, 0xFF	; 255
 2a4:	3f 4f       	sbci	r19, 0xFF	; 255
 2a6:	30 93 33 01 	sts	0x0133, r19	; 0x800133 <j+0x1>
 2aa:	20 93 32 01 	sts	0x0132, r18	; 0x800132 <j>
 2ae:	fc 01       	movw	r30, r24
 2b0:	e5 5f       	subi	r30, 0xF5	; 245
 2b2:	fe 4f       	sbci	r31, 0xFE	; 254
 2b4:	80 81       	ld	r24, Z
 2b6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
				if (j==strlen(res))
 2ba:	eb e0       	ldi	r30, 0x0B	; 11
 2bc:	f1 e0       	ldi	r31, 0x01	; 1
 2be:	01 90       	ld	r0, Z+
 2c0:	00 20       	and	r0, r0
 2c2:	e9 f7       	brne	.-6      	; 0x2be <__vector_19+0x1b2>
 2c4:	31 97       	sbiw	r30, 0x01	; 1
 2c6:	eb 50       	subi	r30, 0x0B	; 11
 2c8:	f1 40       	sbci	r31, 0x01	; 1
 2ca:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <j>
 2ce:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <j+0x1>
 2d2:	e8 17       	cp	r30, r24
 2d4:	f9 07       	cpc	r31, r25
 2d6:	91 f4       	brne	.+36     	; 0x2fc <__vector_19+0x1f0>
				{
					j=0;
 2d8:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <j+0x1>
 2dc:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <j>
					output_enable=0;
 2e0:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <output_enable+0x1>
 2e4:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <output_enable>
					state=0;
 2e8:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <state+0x1>
 2ec:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <state>
					on=1;
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <on+0x1>
 2f8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <on>
				}
			}
		}
}
 2fc:	ff 91       	pop	r31
 2fe:	ef 91       	pop	r30
 300:	9f 91       	pop	r25
 302:	8f 91       	pop	r24
 304:	3f 91       	pop	r19
 306:	2f 91       	pop	r18
 308:	0f 90       	pop	r0
 30a:	0f be       	out	0x3f, r0	; 63
 30c:	0f 90       	pop	r0
 30e:	1f 90       	pop	r1
 310:	18 95       	reti

00000312 <__vector_18>:
ISR(USART_RX_vect){
 312:	1f 92       	push	r1
 314:	0f 92       	push	r0
 316:	0f b6       	in	r0, 0x3f	; 63
 318:	0f 92       	push	r0
 31a:	11 24       	eor	r1, r1
 31c:	2f 93       	push	r18
 31e:	3f 93       	push	r19
 320:	8f 93       	push	r24
 322:	9f 93       	push	r25
	count+=1;
 324:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <count>
 328:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <count+0x1>
 32c:	01 96       	adiw	r24, 0x01	; 1
 32e:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <count+0x1>
 332:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <count>
	if (count==1)
 336:	81 30       	cpi	r24, 0x01	; 1
 338:	91 05       	cpc	r25, r1
 33a:	29 f4       	brne	.+10     	; 0x346 <__vector_18+0x34>
	{
		a=UDR0;
 33c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 340:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <a>
 344:	5b c0       	rjmp	.+182    	; 0x3fc <__vector_18+0xea>
	}
	else if ((count==2)&(a=='A'))
 346:	21 e0       	ldi	r18, 0x01	; 1
 348:	02 97       	sbiw	r24, 0x02	; 2
 34a:	09 f0       	breq	.+2      	; 0x34e <__vector_18+0x3c>
 34c:	20 e0       	ldi	r18, 0x00	; 0
 34e:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <a>
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	91 34       	cpi	r25, 0x41	; 65
 356:	09 f0       	breq	.+2      	; 0x35a <__vector_18+0x48>
 358:	80 e0       	ldi	r24, 0x00	; 0
 35a:	32 2f       	mov	r19, r18
 35c:	38 23       	and	r19, r24
 35e:	f1 f0       	breq	.+60     	; 0x39c <__vector_18+0x8a>
	{
		b=UDR0;
 360:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 364:	90 93 30 01 	sts	0x0130, r25	; 0x800130 <b>
		if ((a=='A')&(b=='B'))
 368:	21 e0       	ldi	r18, 0x01	; 1
 36a:	92 34       	cpi	r25, 0x42	; 66
 36c:	09 f0       	breq	.+2      	; 0x370 <__vector_18+0x5e>
 36e:	20 e0       	ldi	r18, 0x00	; 0
 370:	82 23       	and	r24, r18
 372:	59 f0       	breq	.+22     	; 0x38a <__vector_18+0x78>
		{
			output_enable=1;
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <output_enable+0x1>
 37c:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <output_enable>
			state=1;
 380:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <state+0x1>
 384:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <state>
 388:	39 c0       	rjmp	.+114    	; 0x3fc <__vector_18+0xea>
		}
		else{
			count=1;
 38a:	21 e0       	ldi	r18, 0x01	; 1
 38c:	30 e0       	ldi	r19, 0x00	; 0
 38e:	30 93 2d 01 	sts	0x012D, r19	; 0x80012d <count+0x1>
 392:	20 93 2c 01 	sts	0x012C, r18	; 0x80012c <count>
			a=b;
 396:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <a>
 39a:	30 c0       	rjmp	.+96     	; 0x3fc <__vector_18+0xea>
		}
	}
	else if ((count==2)&(a=='C'))
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	93 34       	cpi	r25, 0x43	; 67
 3a0:	09 f0       	breq	.+2      	; 0x3a4 <__vector_18+0x92>
 3a2:	80 e0       	ldi	r24, 0x00	; 0
 3a4:	28 23       	and	r18, r24
 3a6:	01 f1       	breq	.+64     	; 0x3e8 <__vector_18+0xd6>
	{
		b=UDR0;
 3a8:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 3ac:	90 93 30 01 	sts	0x0130, r25	; 0x800130 <b>
		if ((a=='C')&(b=='D'))
 3b0:	21 e0       	ldi	r18, 0x01	; 1
 3b2:	94 34       	cpi	r25, 0x44	; 68
 3b4:	09 f0       	breq	.+2      	; 0x3b8 <__vector_18+0xa6>
 3b6:	20 e0       	ldi	r18, 0x00	; 0
 3b8:	82 23       	and	r24, r18
 3ba:	69 f0       	breq	.+26     	; 0x3d6 <__vector_18+0xc4>
		{
			output_enable=1;
 3bc:	81 e0       	ldi	r24, 0x01	; 1
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <output_enable+0x1>
 3c4:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <output_enable>
			state=2;
 3c8:	82 e0       	ldi	r24, 0x02	; 2
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <state+0x1>
 3d0:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <state>
 3d4:	13 c0       	rjmp	.+38     	; 0x3fc <__vector_18+0xea>
		}
		else{
			count=1;
 3d6:	21 e0       	ldi	r18, 0x01	; 1
 3d8:	30 e0       	ldi	r19, 0x00	; 0
 3da:	30 93 2d 01 	sts	0x012D, r19	; 0x80012d <count+0x1>
 3de:	20 93 2c 01 	sts	0x012C, r18	; 0x80012c <count>
			a=b;
 3e2:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <a>
 3e6:	0a c0       	rjmp	.+20     	; 0x3fc <__vector_18+0xea>
		}
	}
	else{
		count=0;
 3e8:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <count+0x1>
 3ec:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <count>
		wrong=1;
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <wrong+0x1>
 3f8:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <wrong>
	}
}
 3fc:	9f 91       	pop	r25
 3fe:	8f 91       	pop	r24
 400:	3f 91       	pop	r19
 402:	2f 91       	pop	r18
 404:	0f 90       	pop	r0
 406:	0f be       	out	0x3f, r0	; 63
 408:	0f 90       	pop	r0
 40a:	1f 90       	pop	r1
 40c:	18 95       	reti

0000040e <main>:

int main(void)
{
	UBRR0 = X;
 40e:	87 e6       	ldi	r24, 0x67	; 103
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 416:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	//transmit and receive enable
	UCSR0B = (1 << TXEN0)| (1 << RXEN0) | (1 << RXCIE0) | (1<<UDRIE0);//(1 << TXCIE0) debugde了快两个小时，愣是不知道哪里出了问题，最后试着把这个删掉，就成了
 41a:	88 eb       	ldi	r24, 0xB8	; 184
 41c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);  //8 bit data format
 420:	86 e0       	ldi	r24, 0x06	; 6
 422:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	set_timer1();
 426:	0e 94 53 00 	call	0xa6	; 0xa6 <set_timer1>
	sei();
 42a:	78 94       	sei
 42c:	ff cf       	rjmp	.-2      	; 0x42c <main+0x1e>

0000042e <_exit>:
 42e:	f8 94       	cli

00000430 <__stop_program>:
 430:	ff cf       	rjmp	.-2      	; 0x430 <__stop_program>
